<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sundeinfo.sypglass.solr.mapper.SolrStructureMapper">
  <resultMap id="BaseResultMap" type="com.sundeinfo.sypglass.solr.model.SolrStructure">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="doctype" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="datatype" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="multiValued" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="indexed" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="notnull" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="iskey" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="clustering" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="comment" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, doctype, code, name, datatype, multiValued, indexed, notnull, iskey, clustering, 
    comment, status
  </sql>
  <select id="selectByExample" parameterType="com.sundeinfo.sypglass.solr.model.SolrStructureExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from g_solrstructure
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from g_solrstructure
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from g_solrstructure
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sundeinfo.sypglass.solr.model.SolrStructureExample">
    delete from g_solrstructure
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sundeinfo.sypglass.solr.model.SolrStructure" keyProperty="id"
          keyColumn="ID" useGeneratedKeys="true">
    insert into g_solrstructure (id, doctype, code, 
      name, datatype, multiValued, 
      indexed, notnull, iskey, 
      clustering, comment, status
      )
    values (#{id,jdbcType=BIGINT}, #{doctype,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{datatype,jdbcType=INTEGER}, #{multivalued,jdbcType=INTEGER}, 
      #{indexed,jdbcType=INTEGER}, #{notnull,jdbcType=INTEGER}, #{iskey,jdbcType=INTEGER}, 
      #{clustering,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sundeinfo.sypglass.solr.model.SolrStructure" keyProperty="id"
          keyColumn="ID" useGeneratedKeys="true">
    insert into g_solrstructure
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="doctype != null">
        doctype,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="datatype != null">
        datatype,
      </if>
      <if test="multivalued != null">
        multiValued,
      </if>
      <if test="indexed != null">
        indexed,
      </if>
      <if test="notnull != null">
        notnull,
      </if>
      <if test="iskey != null">
        iskey,
      </if>
      <if test="clustering != null">
        clustering,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="doctype != null">
        #{doctype,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="datatype != null">
        #{datatype,jdbcType=INTEGER},
      </if>
      <if test="multivalued != null">
        #{multivalued,jdbcType=INTEGER},
      </if>
      <if test="indexed != null">
        #{indexed,jdbcType=INTEGER},
      </if>
      <if test="notnull != null">
        #{notnull,jdbcType=INTEGER},
      </if>
      <if test="iskey != null">
        #{iskey,jdbcType=INTEGER},
      </if>
      <if test="clustering != null">
        #{clustering,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sundeinfo.sypglass.solr.model.SolrStructureExample" resultType="java.lang.Long">
    select count(*) from g_solrstructure
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update g_solrstructure
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.doctype != null">
        doctype = #{record.doctype,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.datatype != null">
        datatype = #{record.datatype,jdbcType=INTEGER},
      </if>
      <if test="record.multivalued != null">
        multiValued = #{record.multivalued,jdbcType=INTEGER},
      </if>
      <if test="record.indexed != null">
        indexed = #{record.indexed,jdbcType=INTEGER},
      </if>
      <if test="record.notnull != null">
        notnull = #{record.notnull,jdbcType=INTEGER},
      </if>
      <if test="record.iskey != null">
        iskey = #{record.iskey,jdbcType=INTEGER},
      </if>
      <if test="record.clustering != null">
        clustering = #{record.clustering,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update g_solrstructure
    set id = #{record.id,jdbcType=BIGINT},
      doctype = #{record.doctype,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      datatype = #{record.datatype,jdbcType=INTEGER},
      multiValued = #{record.multivalued,jdbcType=INTEGER},
      indexed = #{record.indexed,jdbcType=INTEGER},
      notnull = #{record.notnull,jdbcType=INTEGER},
      iskey = #{record.iskey,jdbcType=INTEGER},
      clustering = #{record.clustering,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sundeinfo.sypglass.solr.model.SolrStructure">
    update g_solrstructure
    <set>
      <if test="doctype != null">
        doctype = #{doctype,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="datatype != null">
        datatype = #{datatype,jdbcType=INTEGER},
      </if>
      <if test="multivalued != null">
        multiValued = #{multivalued,jdbcType=INTEGER},
      </if>
      <if test="indexed != null">
        indexed = #{indexed,jdbcType=INTEGER},
      </if>
      <if test="notnull != null">
        notnull = #{notnull,jdbcType=INTEGER},
      </if>
      <if test="iskey != null">
        iskey = #{iskey,jdbcType=INTEGER},
      </if>
      <if test="clustering != null">
        clustering = #{clustering,jdbcType=INTEGER},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sundeinfo.sypglass.solr.model.SolrStructure">
    update g_solrstructure
    set doctype = #{doctype,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      datatype = #{datatype,jdbcType=INTEGER},
      multiValued = #{multivalued,jdbcType=INTEGER},
      indexed = #{indexed,jdbcType=INTEGER},
      notnull = #{notnull,jdbcType=INTEGER},
      iskey = #{iskey,jdbcType=INTEGER},
      clustering = #{clustering,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>