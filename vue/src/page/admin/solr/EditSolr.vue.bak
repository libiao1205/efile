<template>
    <div class="edit-mata-data">
        <el-dialog :title="dialogTitle" :visible.sync="visible" :close-on-click-modal="false" width="700px" @close="onClose">
            <el-form ref="form" :model="form" :rules="rules" label-width="80px" :label-position="'left'">
                <el-row :gutter="40">
                    <el-col :span="12">
                        <el-form-item label="源数据id" prop="id">
                            <el-input v-model="form.id" disabled></el-input>
                        </el-form-item>
                        <el-form-item label="文档类型" prop="docType">
                            <el-select v-model="form.docType" placeholder="请选择文档类型">
                                <el-option v-for="(item, index) in docTypes" :key="index" :label="item.comment" :value="item.value"></el-option>
                            </el-select>
                        </el-form-item>
                        <el-form-item label="字段编码" prop="code">
                            <el-input v-model="form.code"></el-input>
                        </el-form-item>
                        <el-form-item label="字段名称" prop="name">
                            <el-input v-model="form.name"></el-input>
                        </el-form-item>
                        <el-form-item label="数据类型" prop="dataType">
                            <!-- <el-input v-model="form.dataType"></el-input> -->
                            <el-select v-model="form.dataType" placeholder="请选择数据类型" @change="handleChangeDataType">
                                <el-option
                                    v-for="(item, index) in dataTypes"
                                    :key="index"
                                    :label="item.label"
                                    :value="item.value"
                                ></el-option>
                            </el-select>
                        </el-form-item>
                    </el-col>
                    <el-col :span="12">
                        <el-form-item label="多值映射" prop="multivalued">
                            <el-switch
                                v-model="form.multivalued"
                                active-text="是"
                                inactive-text="否"
                            ></el-switch>
                        </el-form-item>
                        <el-form-item label="创建索引" prop="indexed">
                            <el-switch
                                v-model="form.indexed"
                                active-text="是"
                                inactive-text="否"
                            ></el-switch>
                        </el-form-item>
                        <el-form-item label="非空" prop="notnull">
                            <el-switch
                                v-model="form.notnull"
                                active-text="是"
                                inactive-text="否"
                            ></el-switch>
                        </el-form-item>
                        <el-form-item label="主键" prop="isKey">
                            <el-switch
                                v-model="form.isKey"
                                active-text="是"
                                inactive-text="否"
                            ></el-switch>
                        </el-form-item>
                        <el-form-item label="聚类" prop="clustering">
                            <el-switch
                                v-model="form.clustering"
                                active-text="是"
                                inactive-text="否"
                            ></el-switch>
                        </el-form-item>
                    </el-col>
                </el-row>
                <el-row>
                    <el-form-item label="说明" prop="comment">
                        <el-input type="textarea" v-model="form.comment"></el-input>
                    </el-form-item>
                </el-row>
            </el-form>
            <div slot="footer" class="dialog-footer">
                <el-button type="primary" icon="iconfont icon-add-new" @click="dialogOnSubmit">
                    <span style="padding-left: 10px;"><b>确定</b></span>
                </el-button>
                <el-button icon="iconfont icon-jieshu" @click.native="dialogOnClose">
                    <span style="padding-left: 10px;"><b>关闭</b></span>
                </el-button>
            </div>
        </el-dialog>
    </div>
</template>

<script>
import {dataTypes} from '../../../util/initData';
import Utils from '../../../util/utils';
export default {
    name: 'EditSolr',
    data() {
        return {
            visible: false,
            dialogType: 'create',
            form: {
                id: '',
                docType: '',
                code: '',
                name: '',
                dataType: '',
                multivalued: false,
                indexed: false,
                notnull: false,
                isKey: false,
                clustering: false,
                comment: '',
            },
            rules: {
                docType: [
                    {
                        required: true,
                        message: '请选择文档类型',
                        trigger: 'change',
                    },
                ],
                code: [
                    {
                        required: true,
                        message: '请输入字段编码',
                        trigger: 'blur',
                    },
                ],
                name: [
                    {
                        required: true,
                        message: '请输入字段名称',
                        trigger: 'blur',
                    },
                ],
                dataType: [
                    {
                        required: true,
                        message: '请输入数据类型',
                        trigger: 'blur',
                    },
                ],
            },
            docTypes: [],
            dataTypes: [],
        };
    },
    computed: {
        dialogTitle() {
            if (this.dialogType === 'edit') {
                return '修改solr数据';
            }
            return '新增solr数据';
        }
    },
    mounted() {
        this.dataTypes = dataTypes;
    },
    methods: {
        onClose() {
            this.initForm();
            this.$refs['form'].resetFields();
        },
        dialogOnClose() {
            this.visible = false;
            this.initForm();
            this.$refs['form'].resetFields();
        },
        dialogOnSubmit() {
            debugger
            this.$refs['form'].validate((valid) => {
                if (!valid) {
                    return;
                }
                if (this.dialogType === 'create') {
                    const {id, ...formItem} = this.form;
                    const data = {
                        ...formItem,
                        docType: parseInt(this.form.docType),
                        notnull: this.form.notnull ? 1 : 0,
                        multivalued: this.form.multivalued ? 1 : 0,
                        indexed: this.form.indexed ? 1 : 0,
                        isKey: this.form.isKey ? 1 : 0,
                        clustering: this.form.clustering ? 1 : 0,
                    };
                    this.$axios({
                        method: 'post',
                        url: `/external/solrInsert`,
                        data,
                    }).then((res) => {
                        this.$message.success('新建成功');
                        this.dialogOnClose();
                        Utils.$emit('refreshSolr');
                    }).catch((err) => {
                        this.$message.error(`新建数据失败，失败码：${err.response.status}`);
                    });
                }
                if (this.dialogType === 'edit') {
                    const {status, ...formItem} = this.form;
                    const data = {
                        ...formItem,
                        docType: parseInt(this.form.docType),
                        notnull: this.form.notnull ? 1 : 0,
                        multivalued: this.form.multivalued ? 1 : 0,
                        indexed: this.form.indexed ? 1 : 0,
                        isKey: this.form.isKey ? 1 : 0,
                        clustering: this.form.clustering ? 1 : 0,
                    };
                    this.$axios({
                        method: 'put',
                        url: `/external/solrUpdate`,
                        data,
                    }).then((res) => {
                        this.$message.success('修改成功');
                        this.dialogOnClose();
                        Utils.$emit('refreshSolr');
                    }).catch((err) => {
                        this.$message.error(`修改数据失败，失败码：${err.response.status}`);
                    });
                }
            });
        },
        handleChangeDataType(val) {},
        initForm() {
            this.form  = {
                id: '',
                docType: '',
                code: '',
                name: '',
                dataType: '',
                multivalued: false,
                indexed: false,
                notnull: false,
                isKey: false,
                clustering: false,
                comment: '',
            };
        },
    },
}
</script>

<style lang="scss">
// .edit-mata-data {

// }
</style>
